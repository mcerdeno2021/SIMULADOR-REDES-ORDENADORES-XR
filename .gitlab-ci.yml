# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:
  - build
  - test
  - deploy

# Etapa de build (opcional, puedes compilar o generar assets si los necesitas)
build-job:
  stage: build
  script:
    - echo "Compilando proyecto A-Frame..."
    # Aquí podrías poner comandos de build si usas algo como npm, webpack, etc.
  artifacts:
    paths:
      - dist/   # Si tienes una carpeta de build, opcional

# Etapa de test (opcional)
unit-test-job:
  stage: test
  script:
    - echo "Ejecutando pruebas unitarias..."
    - sleep 5
    - echo "Pruebas completadas."

lint-test-job:
  stage: test
  script:
    - echo "Linting del código..."
    - sleep 2
    - echo "Sin errores de lint."

# Etapa de deploy (GitLab Pages)
pages:
  stage: deploy
  script:
    # Crear la carpeta public obligatoria para GitLab Pages
    - mkdir public
    # Copiar todo el contenido de docs (que usas para GitHub Pages) a public
    - cp -r docs/* public/
  artifacts:
    paths:
      - public
  only:
    - main
